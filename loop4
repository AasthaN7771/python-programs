def is_prime(n):
    if n <= 1:
        return False
    for i in range(2, int(n**0.5) + 1):
        if n % i == 0:
            return False
    return True

def is_perfect(n):
    return n == sum(i for i in range(1, n) if n % i == 0)

def is_armstrong(n):
    num_str = str(n)
    power = len(num_str)
    return n == sum(int(digit) ** power for digit in num_str)

def is_palindrome(n):
    return str(n) == str(n)[::-1]

def is_automorphic(n):
    square = n * n
    return str(square).endswith(str(n))


number = 26
print(f"Is {number} prime? {is_prime(number)}")
print(f"Is {number} perfect? {is_perfect(number)}")
print(f"Is {number} Armstrong? {is_armstrong(number)}")
print(f"Is {number} palindrome? {is_palindrome(number)}")
print(f"Is {number} automorphic? {is_automorphic(number)}")